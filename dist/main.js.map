{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/guard/index.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/modules/index.ts","webpack:///./src/app/shared/modules/page-header/page-header.component.html","webpack:///./src/app/shared/modules/page-header/page-header.component.scss","webpack:///./src/app/shared/modules/page-header/page-header.component.ts","webpack:///./src/app/shared/modules/page-header/page-header.module.ts","webpack:///./src/app/shared/modules/stat/stat.component.html","webpack:///./src/app/shared/modules/stat/stat.component.scss","webpack:///./src/app/shared/modules/stat/stat.component.ts","webpack:///./src/app/shared/modules/stat/stat.module.ts","webpack:///./src/app/shared/pipes/shared-pipes.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/helpers/jwt-interceptor.ts","webpack:///./src/main.ts","webpack:///./src/providers/api/api-provider.ts","webpack:///./src/services/auth.service.ts","webpack:///./src/services/colonias.service.ts","webpack:///./src/services/seo-apis.service.ts","webpack:///./src/services/territorios.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./access-denied/access-denied.module\": [\n\t\t\"./src/app/access-denied/access-denied.module.ts\",\n\t\t\"access-denied-access-denied-module\"\n\t],\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/layout/dashboard/dashboard.module.ts\",\n\t\t\"dashboard-dashboard-module~layout-layout-module~login-login-module\",\n\t\t\"dashboard-dashboard-module~layout-layout-module\",\n\t\t\"common\",\n\t\t\"dashboard-dashboard-module\"\n\t],\n\t\"./layout/layout.module\": [\n\t\t\"./src/app/layout/layout.module.ts\",\n\t\t\"dashboard-dashboard-module~layout-layout-module~login-login-module\",\n\t\t\"dashboard-dashboard-module~layout-layout-module\",\n\t\t\"common\",\n\t\t\"layout-layout-module\"\n\t],\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"dashboard-dashboard-module~layout-layout-module~login-login-module\",\n\t\t\"common\",\n\t\t\"login-login-module\"\n\t],\n\t\"./not-found/not-found.module\": [\n\t\t\"./src/app/not-found/not-found.module.ts\",\n\t\t\"not-found-not-found-module\"\n\t],\n\t\"./server-error/server-error.module\": [\n\t\t\"./src/app/server-error/server-error.module.ts\",\n\t\t\"server-error-server-error-module\"\n\t],\n\t\"./signup/signup.module\": [\n\t\t\"./src/app/signup/signup.module.ts\",\n\t\t\"common\",\n\t\t\"signup-signup-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './shared';\n\nconst routes: Routes = [\n    { path: '', loadChildren: './layout/layout.module#LayoutModule', canActivate: [AuthGuard] },\n    { path: 'login', loadChildren: './login/login.module#LoginModule' },\n    { path: 'signup', loadChildren: './signup/signup.module#SignupModule' },\n    { path: 'error', loadChildren: './server-error/server-error.module#ServerErrorModule' },\n    { path: 'access-denied', loadChildren: './access-denied/access-denied.module#AccessDeniedModule' },\n    { path: 'not-found', loadChildren: './not-found/not-found.module#NotFoundModule' },\n    { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {JwtInterceptor} from '../helpers/jwt-interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './shared';\nimport { ApiProvider } from '../providers/api/api-provider';\nimport { AuthService } from '../services/auth.service';\nimport { SeoApisService } from '../services/seo-apis.service';\nimport { ColoniasService } from '../services/colonias.service';\nimport { TerritoriosService } from '../services/territorios.service';\n//import { SharedServicesService } from '../services/shared-services.service';\n\n\n\n\n \n// Import your library\nimport { AlertModule } from 'ngx-alerts';\n\n\n// AoT requires an exported function for factories\nexport const createTranslateLoader = (http: HttpClient) => {\n    /* for development\n    return new TranslateHttpLoader(\n        http,\n        '/start-angular/SB-Admin-BS4-Angular-6/master/dist/assets/i18n/',\n        '.json'\n    ); */\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n};\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        }),\n        AlertModule.forRoot({maxMessages: 5, timeout: 5000, position: 'right'}),\n        AppRoutingModule\n    ],\n    declarations: [AppComponent],\n    providers: [AuthGuard, \n\t\t{provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n                ApiProvider,\n                AuthService,\n                SeoApisService,\n                ColoniasService,\n                //SharedServicesService,\n                TerritoriosService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router) {}\n\n    canActivate() {\n        if (localStorage.getItem('isLoggedin')) {\n            return true;\n        }\n\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n","export * from './auth.guard';\n","export * from './modules';\nexport * from './pipes/shared-pipes.module';\nexport * from './guard';\n","export * from './page-header/page-header.module';\nexport * from './stat/stat.module';\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <h2 class=\\\"page-header\\\">\\n            {{heading}}\\n        </h2>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li class=\\\"breadcrumb-item\\\">\\n                <i class=\\\"fa fa-dashboard\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa {{icon}}\\\"></i> {{heading}}</li>\\n        </ol>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n    selector: 'app-page-header',\n    templateUrl: './page-header.component.html',\n    styleUrls: ['./page-header.component.scss']\n})\nexport class PageHeaderComponent implements OnInit {\n    @Input() heading: string;\n    @Input() icon: string;\n    constructor() {}\n\n    ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { PageHeaderComponent } from './page-header.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule],\n    declarations: [PageHeaderComponent],\n    exports: [PageHeaderComponent]\n})\nexport class PageHeaderModule {}\n","module.exports = \"<div class=\\\"card text-white bg-{{bgClass}}\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col-xs-3\\\">\\n                <i class=\\\"fa {{icon}} fa-5x\\\"></i>\\n            </div>\\n            <div class=\\\"col col-xs-9 text-right\\\">\\n                <div class=\\\"d-block huge\\\">{{count}}</div>\\n                <div class=\\\"d-block\\\">{{label}}</div>\\n            </div>\\n        </div>\\n    </div>\\n \\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'app-stat',\n    templateUrl: './stat.component.html',\n    styleUrls: ['./stat.component.scss']\n})\nexport class StatComponent implements OnInit {\n    @Input() bgClass: string;\n    @Input() icon: string;\n    @Input() count: number;\n    @Input() label: string;\n    @Input() data: number;\n    @Output() event: EventEmitter<any> = new EventEmitter();\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatComponent } from './stat.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [StatComponent],\n    exports: [StatComponent]\n})\nexport class StatModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: []\n})\nexport class SharedPipesModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://localhost:8000',\n  loginSeoUrl:'http://www.seguimientodeaves.org/_Atlas/frmLoginCensosServer.php',\n  grant_type: \"password\",\n  client_secret: \"1utbw9ki61og0008ko8ko0gskg4ckgsk08g8gowkk4w8wgkg48\",\n  client_id: \"1_37v2qyyqfw4kww444c888co8o084soscos0owcwwcs8g00c8ck\"\n};\n","\nimport {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    let token = localStorage.getItem('token');\n    if (token) {\n     if (!request.headers.has(\"Authorization\")){\n\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n    }\n    return next.handle(request);\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n\n@Injectable()\nexport class ApiProvider {\n\t private url: string = environment.backendUrl;\n\n\n  constructor(public http: HttpClient) {\n\n  }\n\n  get(endpoint: string, options?: any) {\n\n    return this.http.get<any>(this.url + '/' + endpoint, options);\n  }\n\n  post(endpoint: string, body: any, options?: any) {\n    \n    return this.http.post<any>(this.url + '/' + endpoint, body, options);\n  }\n\n\n  put(endpoint: string, body: any, options?: any) {\n    return this.http.put(this.url + '/' + endpoint, body, options);\n  }\n\n  delete(endpoint: string, options?: any) {\n    \n    return this.http.delete(this.url + '/' + endpoint, options);\n  }\n\n  patch(endpoint: string, body: any, options?: any) {\n    return this.http.put(this.url + '/' + endpoint, body, options);\n  }\n\n  public getUrl() {\n    return this.url;\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiProvider} from \"../providers/api/api-provider\";\nimport {environment} from \"../environments/environment\";\nimport {TempUser} from '../models/temp-user';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n\nprivate url: string = environment.backendUrl;\n\n\n  constructor(private api: ApiProvider, private http: HttpClient) {\n  }\n\n\n\n   login(accountData: any): any {\n\n    var body = \"username=\" + accountData.username + \"&password=\" + accountData.password + \"&grant_type=\" + environment.grant_type + \"&client_id=\" + environment.client_id + \"&client_secret=\" + environment.client_secret;\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/x-www-form-urlencoded')};\n\n    return this.api.post('api/login', body, config)\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          \n        }\n        return user;\n      }));\n  }\n\n  //Sabemos si es la primera ez que el usuario se logea en nuestra aplicación\n  isRegistered(id) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/isRegistered', JSON.stringify(id), config);\n    return response;\n  \n  }\n\n  //Nos registramos en la aplicacion\n  register(data) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/register', JSON.stringify(data), config);\n    return response;\n  \n  }\n\n  //Guardaremos si es admin\n  isAdmin() {\n    return this.http.get<any>(this.url + '/api/isAdmin');\n  }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiProvider} from \"../providers/api/api-provider\";\nimport {environment} from \"../environments/environment\";\nimport {Colonia} from '../models/colonia';\nimport {VisitaColonia} from '../models/visita-colonia';\nimport {LocNidos} from '../models/loc-nidos';\nimport {EventEmitter} from '@angular/core';\n\n@Injectable()\nexport class ColoniasService {\n\nprivate url: string = environment.backendUrl;\npublic coloniaSelectedEvent: EventEmitter<any> = new EventEmitter();\n\n\n  constructor(private api: ApiProvider, private http: HttpClient) {\n  }\n\n\n  //Registra una nueva colonia\n  nuevaColonia(colonia: Colonia) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/colonias', JSON.stringify(colonia), config);\n    return response;\n  }\n\n//Recupera las colonias cercanas a la posicion del usuario, con un radio de distancia\n  recuperaColoniasCercanas( radio, lat, lon, especie) {\n    return this.http.get<any>(this.url + '/api/closeCol?rad=' + radio + '&lat=' + lat + '&lon=' + lon + '&especie=' + especie);\n  }\n\n  //recupera todas las colonias con paginacion\n\n  recuperaColonias( page:number, especie:number) {\n    return this.http.get<any>(this.url + '/api/colonias?page=' + page + '&especie=' + especie);\n  }\n\n//Recupera las colonias marcadas como favoritas por el usuario\n  recuperaFavoritos( userId:number) {\n    return this.http.get<any>(this.url + '/api/colonias/favoritos/' + userId);\n  }\n\n //Marca una nueva colonia como favorita\n  nuevoFavorito( data) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/colonias/favoritos', JSON.stringify(data), config);\n    return response;\n  \n  }\n\n  //Desmarcamos un favorito\n  removeFavorito(colId:number, usuario) {\n    return this.api.delete('api/colonias/favoritos/' + colId + '?usuario=' + usuario);\n  }\n\n\n//Recuperamos colonias con un string de busqueda que incluye filtros\n  recuperaColoniasFiltered( page:number, busqueda:string) {\n    return this.http.get<any>(this.url + '/api/colonias?page=' + page + busqueda);\n  }\n\n  //Recupera los datos de una sola colonia\n\n  recuperaColonia( colId:number) {\n\n    return this.http.get<Colonia>(this.url + '/api/colonias/'+colId);\n  }\n\n//Modificamos los datos de una colonia existente\n  modificarColonia(colId:number, data:any) {\n    console.log(data);\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n    return this.api.put('api/putColonia/' + colId, JSON.stringify(data), config);\n  }\n\n//Completamos los datos de la colonia con datos de nidos \n  completaColoniaNidos(locNidos: LocNidos, colId: number){\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/colonias/' + colId+ '/loc-nidos', JSON.stringify(locNidos), config);\n    return response;\n\n  }\n\n//Completamos los datos de la colonia por si hay otras especies en la misma colonia\n  completaColoniaEspecies(data:any, colId: number){\n\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/colonias/' + colId+ '/otras-especies', JSON.stringify(data), config);\n    return response;\n\n  }\n\n//Recupera las visitas para una colonia\n  recuperaVisitasGeneral( stringBusqueda:any) {\n    return this.http.get<any>(this.url + '/api/visitas-colonias'+stringBusqueda);\n  }\n\n//Registramos una nueva visita en una colonia\n  nuevaVisitaColonia(data:any, colId: number){\n\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/colonias/' + colId+ '/visitas', JSON.stringify(data), config);\n    return response;\n\n  }\n\n//Editamos los datos de una visita ya creada\n  modificarVisita(visitaId:number, visita) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n    return this.api.put('api/visitas-colonias/' + visitaId, JSON.stringify(visita), config);\n  }\n\n//Eliminamos una visita que hemos creado\n  eliminarVisita(visitaId:number) {\n    return this.api.delete('api/visitas-colonias/' + visitaId);\n  }\n\n//Obtenemos datos para el dashboard\n\n  getDashboardData(anno){\n    return this.http.get<any>(this.url + '/api/dashboardData?anno=' + anno);\n  }\n\n\n//Obtenemos las estadisticas por año\n\n  getStatsAnno(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsAnno' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por ccaa\n\n  getStatsCcaa(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsCcaa' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por provincia\n\n  getStatsProvincia(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsProvincia' + busqueda );\n  }\n\n//Obtenemos las temporadas\n\n  getTemporadas(){\n    return this.http.get<any>(this.url + '/api/temporadas');\n  }\n\n//Obtenemos estadisticas generales, una llamada por especie\n\n  getStats(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/stats?especie='+especie + busqueda);\n  }\n\n  //Operación para dejar seleccionada una especie en memoria\n\n  selectColonia(data) {\n    localStorage.setItem('especie', JSON.stringify(data));\n    this.coloniaSelectedEvent.emit(data);  \n     return data;\n  }\n\n\n\n  //Obtenemos las estadisticas por año para numero de nidos\n\n  getStatsAnnoCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsAnnoCol'+busqueda);\n  }\n\n  //Obtenemos las estadisticas por ccaa para numero de nidos\n\n  getStatsCcaaCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsCcaaCol' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por provincia para numero de nidos\n\n  getStatsProvinciaCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsProvinciaCol' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por municipio para numero de nidos\n\n  getStatsMunicipioCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsMunicipioCol' + busqueda);\n  }\n\n\n//Obtenemos las estadisticas por tipo de edificio para numero de nidos\n\n  getStatsTipoEdificioCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsTipoEdificioCol' + busqueda);\n  }\n  \n  getStatsTipoPropiedadCol(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsTipoPropiedadCol' + busqueda);\n  }\n\n\n//Buscamos un censo de municipio\n  getCensoMunicipio(especie, municipio, temporada){\n    return this.http.get<any>(this.url + '/api/censo-municipios?especie='+especie+'&municipio' + municipio + '&temporada='+temporada);\n  }\n\n  //Registramos un nuevo censo en un municipio\n  nuevoCensoMunicipio(data:any){\n\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/censo-municipios', JSON.stringify(data), config);\n    return response;\n\n  }\n  //Modificamos los datos de un censo\n  modificarCenso(censoId:number, data:any) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n    return this.api.put('api/censo-municipios/' + censoId, JSON.stringify(data), config);\n  }\n\n\n  //Subimos una imagen\n\n  uploadImage(id:number,images: File[]){\n    let formData: FormData = new FormData();\n    for (let image of images){\n      console.log(image);\n       formData.append('file[]', image, id+'_image'+new Date().getTime());\n    }\n   \n    return this.api.post('api/visitas-colonias/'+id+'/image', formData);\n  }\n\n\n//Recuperamos documentos\n  recuperaDocs( ) {\n    return this.http.get<any>(this.url + '/api/docs/colonias');\n  }\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiProvider} from \"../providers/api/api-provider\";\nimport {environment} from \"../environments/environment\";\n\n\n@Injectable()\nexport class SeoApisService {\n\nprivate url: string = environment.backendUrl;\nprivate urlSeo: string = environment.loginSeoUrl;\n\n\n\n  constructor(private api: ApiProvider, private http: HttpClient) {\n  }\n\n//Obtiene una lista con todas las aves coloniales y sus imágenes de perfil\n  listaColoniales( ) {\n    return this.http.get<any>(this.url + '/api/listCol');\n  }\n//Obtiene una lista con todas las aves no coloniales y sus imágenes de perfil\n\n  listaNoColoniales( ) {\n    return this.http.get<any>(this.url + '/api/listNoCol');\n  }\n//Recupera el listado de Comunidades autónomas de la base de datos de SEO\n  getCCAA( ) {\n    return this.http.get<any>(this.url + '/api/ccaa');\n  }\n\n//Recupera un listado de provincias de una comunidad autónoma de la base de datos de SeO\n  getProvincia(idCom:any ) {\n    return this.http.get<any>(this.url + '/api/provincias/' + idCom);\n  }\n\n  //Recupera un listado de todas las provincias de la base de datos de SeO\n  getProvincias() {\n    return this.http.get<any>(this.url + '/api/provincias');\n  }\n\n//Recupera los municipios de una provincia de la base de datos de SEO\n  getMunicipio(idProv:any ) {\n    return this.http.get<any>(this.url + '/api/municipios/' + idProv);\n  }\n//Recupera todos los tipos de propiedades\n  getTipoProp() {\n    return this.http.get<any>(this.url + '/api/tipo-propiedads');\n  }\n//Recupera todos los tipos de edificios\n  getTipoEd( ) {\n    return this.http.get<any>(this.url + '/api/tipo-edificios');\n  }  \n\n\n\n  //LLAMADA A LOGIN DE SEO\n\n  loginSeo(data) {\n    //let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.urlSeo + data, [], {});\n    return response;\n  }  \n\n}","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiProvider} from \"../providers/api/api-provider\";\nimport {environment} from \"../environments/environment\";\nimport {EventEmitter} from '@angular/core';\nimport {Territorio} from '../models/territorio';\nimport {LocNidosTerr} from '../models/loc-nidos-terr';\n\n@Injectable()\nexport class TerritoriosService {\n\nprivate url: string = environment.backendUrl;\npublic territorioSelectedEvent: EventEmitter<any> = new EventEmitter();\n\n\n  constructor(private api: ApiProvider, private http: HttpClient) {\n  }\n\n  //Operación para dejar seleccionada una especie en memoria\n\n  selectTerritorio(data) {\n    localStorage.setItem('especie', JSON.stringify(data));\n    this.territorioSelectedEvent.emit(data);  \n     return data;\n  }\n\n//Recupera el número de territorios cercanos a la posicion del usuario, con un radio de distancia\n  recuperaTerritoriosCercanos( radio, lat, lon, especie) {\n    return this.http.get<any>(this.url + '/api/closeTerr?rad=' + radio + '&lat=' + lat + '&lon=' + lon + '&especie=' + especie);\n  }\n\n//Modificamos los datos de un territorio existente\n  modificarTerritorio(terrId:number, data:any) {\n    console.log(data);\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n    return this.api.put('api/putTerritorio/' + terrId, JSON.stringify(data), config);\n  }\n\n   //Registra un nuevo territorio\n  nuevoTerritorio(territoio: Territorio) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/territorios', JSON.stringify(territoio), config);\n    return response;\n  }\n\n  //Completamos los datos del territorio con datos de nidos \n  completaTerritorioNidos(locNidos: LocNidosTerr, terrId: number){\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/territorios/' + terrId+ '/loc-nidos', JSON.stringify(locNidos), config);\n    return response;\n\n  }\n\n  //Obtenemos las temporadas\n\n  getTemporadas(){\n    return this.http.get<any>(this.url + '/api/temporadas');\n  }\n\n  //Obtenemos los tipos de territorio\n\n  getTiposTerritorio(){\n    return this.http.get<any>(this.url + '/api/tipo-territorios');\n  }\n\n  //Obtenemos los emplazamientos\n\n  getEmplazamientos(){\n    return this.http.get<any>(this.url + '/api/emplazamientos');\n  }\n\n   //Obtenemos los emplazamientos\n\n  getObservaciones(){\n    return this.http.get<any>(this.url + '/api/observaciones-territorios');\n  }\n\n  //Obtenemos los tipos de territorio\n\n  getTipos(){\n    return this.http.get<any>(this.url + '/api/tipo-territorios');\n  }\n\n   //recupera todos los territorios con paginacion\n\n  recuperaTerritorios( page:number, especie:number) {\n    return this.http.get<any>(this.url + '/api/territorios?page=' + page + '&especie=' + especie);\n  }\n//Recuperamos territorios con un string de busqueda que incluye filtros\n  recuperaTerritoriosFiltered( page:number, busqueda:string) {\n    return this.http.get<any>(this.url + '/api/territorios?page=' + page + busqueda);\n  }\n\n  //Recupera los datos de un solo territorio\n\n  recuperaTerritorio( terrId:number) {\n\n    return this.http.get<Territorio>(this.url + '/api/territorios/'+terrId);\n  }\n\n\n  //Recupera los territorios marcados como favoritos por el usuario\n  recuperaFavoritos( userId:number) {\n    return this.http.get<any>(this.url + '/api/territorios/favoritos/' + userId);\n  }\n\n //Marca un nuevo territorio como favorito\n  nuevoFavorito( data) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/territorios/favoritos', JSON.stringify(data), config);\n    return response;\n  \n  }\n\n   //Desmarcamos un favorito\n  removeFavorito(colId:number, usuario) {\n    return this.api.delete('api/territorios/favoritos/' + colId + '?usuario=' + usuario);\n  }\n\n\n\n  //Recupera las visitas para un territorio\n  recuperaVisitasGeneral( stringBusqueda:any) {\n    return this.http.get<any>(this.url + '/api/visitas-territorios'+stringBusqueda);\n  }\n\n\n//Registramos una nueva visita en un territorio\n  nuevaVisitaTerritorio(data:any, terrId: number){\n\n\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n\n    let response=this.http.post(this.url + '/api/territorios/' + terrId+ '/visitas', JSON.stringify(data), config);\n    return response;\n\n  }\n\n\n  //Editamos los datos de una visita ya creada\n  modificarVisita(visitaId:number, visita) {\n    let config = {headers: new HttpHeaders().set(\"Content-Type\", 'application/json')};\n    return this.api.put('api/visitas-territorios/' + visitaId, JSON.stringify(visita), config);\n  }\n\n//Eliminamos una visita que hemos creado\n  eliminarVisita(visitaId:number) {\n    return this.api.delete('api/visitas-territorios/' + visitaId);\n  }\n\n//Obtenemos las estadisticas por año\n\n  getStatsAnno(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsAnnoTerr' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por ccaa\n\n  getStatsCcaa(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsCcaaTerr' + busqueda);\n  }\n\n  //Obtenemos las estadisticas por provincia\n\n  getStatsProvincia(especie,busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+'/statsProvinciaTerr' + busqueda );\n  }\n\n\n  //Obtenemos estadisticas generales, una llamada por especie\n\n  getStats(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/statsTerr?especie='+especie + busqueda);\n  }\n\n  //Obtenemos estadisticas para observaciones\n\n  getStatsObsv(especie, busqueda){\n    return this.http.get<any>(this.url + '/api/especies/'+especie+ '/statsObservaciones'+ busqueda);\n  }\n\n//Subimos una imagen\n\n  uploadImage(id:number,images: File[]){\n    let formData: FormData = new FormData();\n    for (let image of images){\n      console.log(image);\n       formData.append('file[]', image, id+'_image'+new Date().getTime());\n    }\n   \n    return this.api.post('api/visitas-territorios/'+id+'/image', formData);\n  }\n\n\n  //Recuperamos documentos\n  recuperaDocs( ) {\n    return this.http.get<any>(this.url + '/api/docs/territorios');\n  }\n\n\n}"],"sourceRoot":""}